/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.joca.frontend.attendance;

import com.joca.database.attendance.AttendanceDB;
import com.joca.frontend.FramePrincipal;
import com.joca.frontend.GenericTable;
import com.joca.model.attendance.Attendance;
import com.joca.model.exceptions.DuplicatedKeyException;
import com.joca.model.exceptions.InvalidRequisitesException;
import com.joca.model.exceptions.NotFoundException;
import com.joca.model.exceptions.NotRowsAffectedException;
import com.joca.model.filter.Filter;
import com.joca.model.filter.FilterTypeEnum;
import com.joca.services.AttendanceService;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author joca
 */
public class AttendanceActionForm extends javax.swing.JInternalFrame {

    private FramePrincipal framePrincipal;

    /**
     * Creates new form AttendanceForm
     */
    public AttendanceActionForm(FramePrincipal pane) {
        initComponents();
        this.framePrincipal = pane;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerButton = new javax.swing.JButton();
        activityIDLabel = new javax.swing.JLabel();
        idSearchBar = new javax.swing.JTextField();
        emailParticipantLabel = new javax.swing.JLabel();
        emailSearchBar = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setClosable(true);
        setForeground(java.awt.Color.white);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Asistencias");
        setMinimumSize(new java.awt.Dimension(350, 140));
        setPreferredSize(new java.awt.Dimension(350, 150));

        registerButton.setText("Registrar Asistencia");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        activityIDLabel.setText("CÃ³digo de la actividad");

        idSearchBar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                idSearchBarCaretUpdate(evt);
            }
        });

        emailParticipantLabel.setText("Email del participante");

        emailSearchBar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                emailSearchBarCaretUpdate(evt);
            }
        });

        searchButton.setText("Buscar");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Eliminar Asistencia");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(activityIDLabel)
                    .addComponent(emailParticipantLabel))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idSearchBar)
                    .addComponent(emailSearchBar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(registerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(activityIDLabel)
                            .addComponent(idSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailParticipantLabel)
                            .addComponent(emailSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(searchButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton)
                    .addComponent(deleteButton))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        Attendance attendance = new Attendance();
        attendance.setActivityId(idSearchBar.getText());
        attendance.setParticipantEmail(emailSearchBar.getText());
        AttendanceService attendanceService = new AttendanceService(new AttendanceDB());
        try {
            attendanceService.registerAttendance(attendance);
            String message = "Se registro la asistencia del participante " + attendance.getParticipantEmail() + " en la actividad " + attendance.getActivityId();
            JOptionPane.showMessageDialog(this, message, "Asistencia registrada", JOptionPane.INFORMATION_MESSAGE);
            framePrincipal.printOnLog(message);
        } catch (NotRowsAffectedException | SQLException e) {
            framePrincipal.printOnLog("Ocurrio un error al registrar la asistencia");
            JOptionPane.showMessageDialog(this, "Ocurrio un error al registrar la asistencia");
        } catch (InvalidRequisitesException ex) {
            framePrincipal.printOnLog(ex.getMessage());
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NotFoundException ex) {
            String message = "Error al registrar la asistencia: " + ex.getMessage();
            framePrincipal.printOnLog(message);
            JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DuplicatedKeyException ex) {
            framePrincipal.printOnLog("La asistencia ya esta registrada");
            JOptionPane.showMessageDialog(this, "La asistencia ya esta registrada", "Asistencia registrada", JOptionPane.INFORMATION_MESSAGE);
        }
        validateIsInUse();
    }//GEN-LAST:event_registerButtonActionPerformed

    private void idSearchBarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_idSearchBarCaretUpdate
        validateIsInUse();
    }//GEN-LAST:event_idSearchBarCaretUpdate

    private void validateIsInUse() {
        if (idSearchBar.getText().isBlank() || emailSearchBar.getText().isBlank()) {
            return;
        }
        try {
            AttendanceService attendanceService = new AttendanceService(new AttendanceDB());
            if (attendanceService.isKeysInUse(emailSearchBar.getText(), idSearchBar.getText())) {
                deleteButton.setEnabled(true);
            } else {
                deleteButton.setEnabled(false);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void emailSearchBarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_emailSearchBarCaretUpdate
        validateIsInUse();
    }//GEN-LAST:event_emailSearchBarCaretUpdate

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        AttendanceService registrationService = new AttendanceService(new AttendanceDB());
        try {
            List<Filter> filter = getFilter();
            List<Attendance> attendances;
            attendances = registrationService.getAttendancesByFilter(filter);
            GenericTable genericTable = new GenericTable(List.copyOf(attendances), GenericTable.ATTENDANCE_MODEL, "Asistencias encontradas");
            framePrincipal.openNewWindow(genericTable);
            framePrincipal.printOnLog(attendances.size() + " Asistencias encontradas.");
        } catch (InvalidRequisitesException | NotFoundException | SQLException e) {
            framePrincipal.printOnLog(e.getMessage());
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        Attendance attendance = new Attendance();
        attendance.setActivityId(idSearchBar.getText());
        attendance.setParticipantEmail(emailSearchBar.getText());
        AttendanceService attendanceService = new AttendanceService(new AttendanceDB());
        try {
            attendanceService.deleteAttendance(attendance.getParticipantEmail(), attendance.getActivityId());
            String message = "Se eliminÃ³ la asistencia del participante " + attendance.getParticipantEmail() + " en la actividad " + attendance.getActivityId();
            JOptionPane.showMessageDialog(this, message, "Asistencia elimnada", JOptionPane.INFORMATION_MESSAGE);
            framePrincipal.printOnLog(message);
        } catch (NotRowsAffectedException | SQLException e) {
            framePrincipal.printOnLog("Ocurrio un error al eliminar la asistencia");
            JOptionPane.showMessageDialog(this, "Ocurrio un error al eliminar la asistencia");
        }
        validateIsInUse();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private List<Filter> getFilter() {
        List<Filter> filters = new ArrayList<>();
        if (!idSearchBar.getText().isBlank()) {
            filters.add(new Filter("activity_id", idSearchBar.getText(), FilterTypeEnum.EQUAL));
        }
        if (!emailSearchBar.getText().isBlank()) {
            filters.add(new Filter("participant_email", emailSearchBar.getText(), FilterTypeEnum.EQUAL));
        }
        return filters;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activityIDLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel emailParticipantLabel;
    private javax.swing.JTextField emailSearchBar;
    private javax.swing.JTextField idSearchBar;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
