/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.joca.frontend.events;

import com.joca.database.event.EventDB;
import com.joca.frontend.FramePrincipal;
import com.joca.model.UpdateTypeEnum;
import com.joca.model.event.Event;
import com.joca.model.event.EventTypeEnum;
import com.joca.model.exceptions.DuplicatedKeyException;
import com.joca.model.exceptions.InvalidFormatException;
import com.joca.model.exceptions.InvalidRequisitesException;
import com.joca.model.exceptions.NotRowsAffectedException;
import com.joca.services.EventService;
import java.awt.Color;
import java.sql.SQLException;
import java.time.LocalDate;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author joca
 */
public class EventUpdateForm extends javax.swing.JInternalFrame {

    private FramePrincipal framePrincipal;
    private String originalId;
    private UpdateTypeEnum type;
    private Event event;
    
    /**
     * Creates new form CreateEventForm
     * @param framePrincipal
     * @param type
     */
    public EventUpdateForm(FramePrincipal framePrincipal, UpdateTypeEnum type) {
        this.framePrincipal = framePrincipal;
        this.type = type;
        initComponents();
        setTitle(type.getTitleName() + " evento");
        updateButton.setText(type.getTitleName());
        typeComboBox.setModel(new DefaultComboBoxModel(EventTypeEnum.values()));
    }
    
    public EventUpdateForm(Event event, String originalId, FramePrincipal framePrincipal, UpdateTypeEnum type) {
        this(framePrincipal, type);
        this.originalId = originalId;
        this.event = event;
        setEvent(event);
    }
    
    private void setEvent(Event event) {
        idTxt.setText(event.getId());
        titleTxt.setText(event.getTitle());
        spinnerDay.setValue(event.getDate().getDayOfMonth());
        spinnerMonth.setValue(event.getDate().getMonthValue());
        spinnerYear.setValue(event.getDate().getYear());
        spinnerMaxCapacity.setValue(event.getMaxCapacity());
        spinnerPrice.setValue(event.getPrice());
        locationTxt.setText(event.getLocation());
        typeComboBox.setSelectedItem(event.getType());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        maxCapacityLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        titleTxt = new javax.swing.JTextField();
        locationTxt = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        spinnerYear = new javax.swing.JSpinner();
        typeComboBox = new javax.swing.JComboBox<>();
        spinnerDay = new javax.swing.JSpinner();
        spinnerMonth = new javax.swing.JSpinner();
        labelDay = new javax.swing.JLabel();
        labelMonth = new javax.swing.JLabel();
        labelYear = new javax.swing.JLabel();
        spinnerPrice = new javax.swing.JSpinner();
        spinnerMaxCapacity = new javax.swing.JSpinner();
        labelResult = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        idLabel.setText("C칩digo");

        idTxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                idTxtCaretUpdate(evt);
            }
        });

        titleLabel.setText("Titulo");

        dateLabel.setText("Fecha");

        typeLabel.setText("Tipo");

        maxCapacityLabel.setText("Capacidad m치xima");

        priceLabel.setText("Precio");

        locationLabel.setText("Ubicaci칩n");

        updateButton.setText("Crear");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        spinnerYear.setModel(new javax.swing.SpinnerNumberModel(2025, 2000, 2100, 1));

        spinnerDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        spinnerMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        labelDay.setText("Dia");

        labelMonth.setText("Mes");

        labelYear.setText("A침o");

        spinnerPrice.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 0.5d));

        spinnerMaxCapacity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxCapacityLabel)
                            .addComponent(locationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(typeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(priceLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleTxt)
                            .addComponent(locationTxt)
                            .addComponent(idTxt)
                            .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 2, Short.MAX_VALUE)
                                .addComponent(labelDay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labelMonth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(labelYear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spinnerPrice)
                            .addComponent(spinnerMaxCapacity))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(spinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDay)
                    .addComponent(labelMonth)
                    .addComponent(labelYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxCapacityLabel)
                    .addComponent(spinnerMaxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(spinnerPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idTxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_idTxtCaretUpdate
        EventService eventService = new EventService(new EventDB());
        try {
            boolean isEventAvailable = !eventService.isKeyInUse(idTxt.getText());
            if (!isEventAvailable) {
                if (originalId != null && idTxt.getText().equals(originalId)) {
                    updateButton.setEnabled(true);
                    idTxt.setForeground(Color.white);
                    return;
                }
                idTxt.setForeground(Color.red);
                updateButton.setEnabled(false);
            } else {
                idTxt.setForeground(Color.white);
                updateButton.setEnabled(true);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_idTxtCaretUpdate

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            parseEvent();
            EventService eventService = new EventService(new EventDB());
            if (type.equals(UpdateTypeEnum.ACTUALIZAR)) {
                eventService.updateEvent(event, originalId);
                originalId = event.getId();
            } else {
                eventService.createEvent(event);
            }
            setMessage("Evento con c칩digo: " + event.getId() + " " + type.getUpdateMessage(), true);
            framePrincipal.printOnLog("Evento con c칩digo " + event.getId() + " " + type.getUpdateMessage());
        } catch (NotRowsAffectedException | DuplicatedKeyException e) {
            setMessage(e.getMessage(), false);
            framePrincipal.printOnLog(e.getMessage());
        } catch (SQLException e) {
            framePrincipal.printOnLog("Ocurrio un error al " + type.getTitleName().toLowerCase() + " el evento, vuelva a intentarlo m치s tarde - " + e.getMessage());
            setMessage(e.getMessage(), false);
        } catch (InvalidFormatException | InvalidRequisitesException ex) {
            setMessage(ex.getMessage(), false);
            framePrincipal.printOnLog("Error al " + type.getTitleName().toLowerCase() + " el evento - " + ex.getMessage());
        }
        idTxtCaretUpdate(null);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void setMessage(String message, boolean success) {
        if (success) {
            labelResult.setForeground(Color.green);
        } else {
            labelResult.setForeground(Color.red);
        }
        labelResult.setText(message);
    }
    
    private void parseEvent() throws InvalidFormatException {
        event = new Event();
        event.setId(idTxt.getText());
        event.setTitle(titleTxt.getText());
        event.setLocation(locationTxt.getText());
        try {
            event.setDate(LocalDate.of((Integer) spinnerYear.getValue(), (Integer) spinnerMonth.getValue(), (Integer) spinnerDay.getValue()));            
        } catch (Exception e) {
            throw new InvalidFormatException("Por favor, ingrese una fecha valida");
        }
        try {
            event.setMaxCapacity((Integer) spinnerMaxCapacity.getValue());
        } catch (Exception e) {
            throw new InvalidFormatException("Por favor, ingrese una cantidad m치xima valida");
        }
        try {
            event.setPrice((Double) spinnerPrice.getValue());
        } catch (Exception e) {
            throw new InvalidFormatException("Por favor, ingrese un precio valido");
        }
        try {
            event.setType((EventTypeEnum) typeComboBox.getSelectedItem());            
        } catch (Exception e) {
            throw new InvalidFormatException("Por favor, ingrese un tipo de evento valido");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTxt;
    private javax.swing.JLabel labelDay;
    private javax.swing.JLabel labelMonth;
    private javax.swing.JLabel labelResult;
    private javax.swing.JLabel labelYear;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTextField locationTxt;
    private javax.swing.JLabel maxCapacityLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JSpinner spinnerDay;
    private javax.swing.JSpinner spinnerMaxCapacity;
    private javax.swing.JSpinner spinnerMonth;
    private javax.swing.JSpinner spinnerPrice;
    private javax.swing.JSpinner spinnerYear;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTxt;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
